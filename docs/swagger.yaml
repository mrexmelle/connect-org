basePath: /
definitions:
  github_com_mrexmelle_connect-orgs_internal_dto.ServiceError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  github_com_mrexmelle_connect-orgs_internal_placement.Entity:
    properties:
      ehid:
        type: string
      id:
        type: string
      organization_id:
        type: string
      role_id:
        type: string
    type: object
  github_com_mrexmelle_connect-orgs_internal_tree.Node-internal_organization_Entity:
    properties:
      children:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_tree.Node-internal_organization_Entity'
        type: array
      data:
        $ref: '#/definitions/internal_organization.Entity'
    type: object
  internal_organization.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.Entity:
    properties:
      email_address:
        type: string
      hierarchy:
        type: string
      id:
        type: string
      name:
        type: string
      private_slack_channel:
        type: string
      public_slack_channel:
        type: string
    type: object
  internal_organization.GetChildrenResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_organization.Entity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.GetLineageResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_organization.Entity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.GetOfficersResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_placement.Entity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_organization.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.GetSiblingsAndAncestralSiblingsResponseDto:
    properties:
      data:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_tree.Node-internal_organization_Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_organization.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_organization.PostRequestDto:
    properties:
      email_address:
        type: string
      hierarchy:
        type: string
      id:
        type: string
      name:
        type: string
      private_slack_channel:
        type: string
      public_slack_channel:
        type: string
    type: object
  internal_organization.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_organization.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_placement.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_placement.Entity:
    properties:
      ehid:
        type: string
      id:
        type: string
      organization_id:
        type: string
      role_id:
        type: string
    type: object
  internal_placement.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_placement.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_placement.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_placement.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_placement.PostRequestDto:
    properties:
      ehid:
        type: string
      organization_id:
        type: string
      role_id:
        type: string
    type: object
  internal_placement.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_placement.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_role.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_role.Entity:
    properties:
      id:
        type: string
      max_count:
        type: integer
      name:
        type: string
      rank:
        type: integer
    type: object
  internal_role.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_role.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_role.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_role.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
  internal_role.PostRequestDto:
    properties:
      id:
        type: string
      max_count:
        type: integer
      name:
        type: string
      rank:
        type: integer
    type: object
  internal_role.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_role.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8081
info:
  contact:
    email: mrexmelle@gmail.com
  description: Organization API for Connect.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Connect Organization API
  version: 0.1.0
paths:
  /organizations:
    post:
      consumes:
      - application/json
      description: Post a new organization
      parameters:
      - description: Organization Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_organization.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /organizations/{id}:
    delete:
      description: Delete an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
    get:
      description: Get an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
    patch:
      consumes:
      - application/json
      description: Patch an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      - description: Organization Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_organization.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /organizations/{id}/children:
    get:
      description: Get children of an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.GetChildrenResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /organizations/{id}/lineage:
    get:
      description: Get lineage of an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.GetLineageResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /organizations/{id}/officers:
    get:
      description: Get officers within an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.GetOfficersResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /organizations/{id}/siblings-and-ancestral-siblings:
    get:
      description: Get siblings and ancestral siblings of an organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_organization.GetSiblingsAndAncestralSiblingsResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Organizations
  /placements:
    post:
      consumes:
      - application/json
      description: Post a new placement
      parameters:
      - description: Placement Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_placement.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_placement.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Placements
  /placements/{id}:
    delete:
      description: Delete a placement
      parameters:
      - description: Placement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_placement.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Placements
    get:
      description: Get a placement
      parameters:
      - description: Placement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_placement.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Placements
    patch:
      consumes:
      - application/json
      description: Patch a placement
      parameters:
      - description: Placement ID
        in: path
        name: id
        required: true
        type: string
      - description: Placement Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_placement.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_placement.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Placements
  /roles:
    post:
      consumes:
      - application/json
      description: Post a new role
      parameters:
      - description: Role Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_role.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
  /roles/{id}:
    delete:
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
    get:
      description: Get a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
    patch:
      consumes:
      - application/json
      description: Patch a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_role.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
swagger: "2.0"
