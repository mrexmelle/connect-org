basePath: /
definitions:
  github_com_mrexmelle_connect-org_internal_designation.Entity:
    properties:
      ehid:
        type: string
      id:
        type: string
      node_id:
        type: string
      role_id:
        type: string
    type: object
  github_com_mrexmelle_connect-org_internal_dto.ServiceError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  github_com_mrexmelle_connect-org_internal_membership.ViewEntity:
    properties:
      ehid:
        type: string
      end_date:
        type: string
      id:
        type: integer
      node_id:
        type: string
      start_date:
        type: string
    type: object
  github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity:
    properties:
      children:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity'
        type: array
      data:
        $ref: '#/definitions/internal_node.Entity'
    type: object
  internal_designation.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_designation.Entity:
    properties:
      ehid:
        type: string
      id:
        type: string
      node_id:
        type: string
      role_id:
        type: string
    type: object
  internal_designation.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_designation.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_designation.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_designation.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_designation.PostRequestDto:
    properties:
      ehid:
        type: string
      node_id:
        type: string
      role_id:
        type: string
    type: object
  internal_designation.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_designation.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_member.GetHistoryResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_member.GetNodesResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_membership.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_membership.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_membership.ViewEntity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_membership.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_membership.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_membership.PostRequestDto:
    properties:
      ehid:
        type: string
      end_date:
        type: string
      node_id:
        type: string
      start_date:
        type: string
    type: object
  internal_membership.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_membership.ViewEntity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_membership.ViewEntity:
    properties:
      ehid:
        type: string
      end_date:
        type: string
      id:
        type: integer
      node_id:
        type: string
      start_date:
        type: string
    type: object
  internal_node.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.Entity:
    properties:
      email_address:
        type: string
      hierarchy:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  internal_node.GetChildrenResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/internal_node.Entity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.GetLineageResponseDto:
    properties:
      data:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.GetLineagelSiblingsResponseDto:
    properties:
      data:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.GetMembersResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.GetOfficersResponseDto:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_designation.Entity'
        type: array
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_node.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_node.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_node.PostRequestDto:
    properties:
      email_address:
        type: string
      hierarchy:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  internal_node.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_node.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_role.DeleteResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_role.Entity:
    properties:
      id:
        type: string
      max_count:
        type: integer
      name:
        type: string
      rank:
        type: integer
    type: object
  internal_role.GetResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_role.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_role.PatchRequestDto:
    properties:
      fields:
        additionalProperties: true
        type: object
    type: object
  internal_role.PatchResponseDto:
    properties:
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
  internal_role.PostRequestDto:
    properties:
      id:
        type: string
      max_count:
        type: integer
      name:
        type: string
      rank:
        type: integer
    type: object
  internal_role.PostResponseDto:
    properties:
      data:
        $ref: '#/definitions/internal_role.Entity'
      error:
        $ref: '#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError'
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8081
info:
  contact:
    email: mrexmelle@gmail.com
  description: Organization API for Connect.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Connect Organization API
  version: 0.2.0
paths:
  /designations:
    post:
      consumes:
      - application/json
      description: Post a new designations
      parameters:
      - description: Designation Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_designation.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_designation.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Designations
  /designations/{id}:
    delete:
      description: Delete a designation
      parameters:
      - description: Designation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_designation.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Designations
    get:
      description: Get a designation
      parameters:
      - description: Designation ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_designation.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Designations
    patch:
      consumes:
      - application/json
      description: Patch a designation
      parameters:
      - description: Designation ID
        in: path
        name: id
        required: true
        type: string
      - description: Designation Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_designation.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_designation.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Designations
  /members/{ehid}/history:
    get:
      description: Get a member's current organization nodes
      parameters:
      - description: Employee Hash ID
        in: path
        name: ehid
        required: true
        type: string
      - description: Start Date's sorting direction (asc or desc)
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_member.GetHistoryResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Members
  /members/{ehid}/nodes:
    get:
      description: Get a member's current organization nodes
      parameters:
      - description: Employee Hash ID
        in: path
        name: ehid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_member.GetNodesResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Members
  /memberships:
    post:
      consumes:
      - application/json
      description: Post a new memberships
      parameters:
      - description: Membership Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_membership.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_membership.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Memberships
  /memberships/{id}:
    delete:
      description: Delete a membership
      parameters:
      - description: Membership ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_membership.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Memberships
    get:
      description: Get a memberhsip
      parameters:
      - description: Membership ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_membership.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Memberships
    patch:
      consumes:
      - application/json
      description: Patch a membership
      parameters:
      - description: Membership ID
        in: path
        name: id
        required: true
        type: string
      - description: Membership Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_membership.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_membership.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Memberships
  /nodes:
    post:
      consumes:
      - application/json
      description: Post a new node
      parameters:
      - description: Node Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_node.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}:
    delete:
      description: Delete a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
    get:
      description: Get a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
    patch:
      consumes:
      - application/json
      description: Patch a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      - description: Node Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_node.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}/children:
    get:
      description: Get children of a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetChildrenResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}/lineage:
    get:
      description: Get lineage of a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetLineageResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}/lineage-siblings:
    get:
      description: Get siblings and ancestral siblings of a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetLineagelSiblingsResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}/members:
    get:
      description: Get current members within a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetMembersResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /nodes/{id}/officers:
    get:
      description: Get officers within a node
      parameters:
      - description: Node ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_node.GetOfficersResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Nodes
  /roles:
    post:
      consumes:
      - application/json
      description: Post a new role
      parameters:
      - description: Role Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_role.PostRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.PostResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
  /roles/{id}:
    delete:
      description: Delete a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.DeleteResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
    get:
      description: Get a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.GetResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
    patch:
      consumes:
      - application/json
      description: Patch a role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role Patch Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/internal_role.PatchRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: Success Response
          schema:
            $ref: '#/definitions/internal_role.PatchResponseDto'
        "400":
          description: BadRequest
        "500":
          description: InternalServerError
      tags:
      - Roles
swagger: "2.0"
