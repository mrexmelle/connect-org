{
    "swagger": "2.0",
    "info": {
        "description": "Organization API for Connect.",
        "title": "Connect Organization API",
        "contact": {
            "email": "mrexmelle@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/organizations": {
            "post": {
                "description": "Post a new organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "description": "Organization Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_organization.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_organization.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "description": "Get an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_organization.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_organization.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/organizations/{id}/children": {
            "get": {
                "description": "Get children of an organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organizations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_organization.GetChildrenResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_mrexmelle_connect-orgs_internal_dto.ServiceError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "internal_organization.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError"
                }
            }
        },
        "internal_organization.Entity": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "hierarchy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateSlackChannel": {
                    "type": "string"
                },
                "publicSlackChannel": {
                    "type": "string"
                }
            }
        },
        "internal_organization.GetChildrenResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_organization.Entity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError"
                }
            }
        },
        "internal_organization.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_organization.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError"
                }
            }
        },
        "internal_organization.PostRequestDto": {
            "type": "object",
            "properties": {
                "emailAddress": {
                    "type": "string"
                },
                "hierarchy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privateSlackChannel": {
                    "type": "string"
                },
                "publicSlackChannel": {
                    "type": "string"
                }
            }
        },
        "internal_organization.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_organization.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-orgs_internal_dto.ServiceError"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}