// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "mrexmelle@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/designations": {
            "post": {
                "description": "Post a new designations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Designations"
                ],
                "parameters": [
                    {
                        "description": "Designation Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_designation.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_designation.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/designations/{id}": {
            "get": {
                "description": "Get a designation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Designations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Designation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_designation.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a designation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Designations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Designation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_designation.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a designation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Designations"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Designation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Designation Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_designation.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_designation.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/members/{ehid}/history": {
            "get": {
                "description": "Get a member's current organization nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Hash ID",
                        "name": "ehid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Date's sorting direction (asc or desc)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_member.GetHistoryResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/members/{ehid}/nodes": {
            "get": {
                "description": "Get a member's current organization nodes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Members"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee Hash ID",
                        "name": "ehid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_member.GetNodesResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/memberships": {
            "post": {
                "description": "Post a new memberships",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "description": "Membership Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_membership.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_membership.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/memberships/{id}": {
            "get": {
                "description": "Get a memberhsip",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_membership.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a membership",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_membership.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Memberships"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Membership Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_membership.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_membership.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes": {
            "post": {
                "description": "Post a new node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "description": "Node Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_node.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}": {
            "get": {
                "description": "Get a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Node Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_node.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}/children": {
            "get": {
                "description": "Get children of a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetChildrenResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}/lineage": {
            "get": {
                "description": "Get lineage of a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetLineageResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}/lineage-siblings": {
            "get": {
                "description": "Get siblings and ancestral siblings of a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetLineagelSiblingsResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}/members": {
            "get": {
                "description": "Get current members within a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetMembersResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/nodes/{id}/officers": {
            "get": {
                "description": "Get officers within a node",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_node.GetOfficersResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/roles": {
            "post": {
                "description": "Post a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "description": "Role Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_role.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_role.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "Get a role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_role.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_role.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_role.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_role.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_mrexmelle_connect-org_internal_designation.Entity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "github_com_mrexmelle_connect-org_internal_dto.ServiceError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_mrexmelle_connect-org_internal_membership.ViewEntity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "node_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity"
                    }
                },
                "data": {
                    "$ref": "#/definitions/internal_node.Entity"
                }
            }
        },
        "internal_designation.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_designation.Entity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "internal_designation.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_designation.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_designation.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_designation.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_designation.PostRequestDto": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                }
            }
        },
        "internal_designation.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_designation.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_member.GetHistoryResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_member.GetNodesResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_membership.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_membership.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_membership.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_membership.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_membership.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_membership.PostRequestDto": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "node_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "internal_membership.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_membership.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_membership.ViewEntity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "node_id": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "internal_node.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.Entity": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "hierarchy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "internal_node.GetChildrenResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_node.Entity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.GetLineageResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.GetLineagelSiblingsResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_tree.Node-internal_node_Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.GetMembersResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_membership.ViewEntity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.GetOfficersResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_designation.Entity"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_node.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_node.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_node.PostRequestDto": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "hierarchy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "internal_node.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_node.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_role.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_role.Entity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "max_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                }
            }
        },
        "internal_role.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_role.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_role.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_role.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        },
        "internal_role.PostRequestDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "max_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                }
            }
        },
        "internal_role.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_role.Entity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-org_internal_dto.ServiceError"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.2.1",
	Host:             "localhost:8081",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Connect Organization API",
	Description:      "Organization API for Connect.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
